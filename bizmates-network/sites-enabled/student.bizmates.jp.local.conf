# exclude if health check access
map $http_user_agent $is_not_alb {
    ~ELB-HealthChecker/2.0 0;
    default 1;
}

server {
    server_name student.bizmates.jp.local;
    listen 443 ssl;
    ssl_certificate /bizmates.jp/ssl/certs/bizmates.jp.local.crt;
    ssl_certificate_key /bizmates.jp/ssl/keys/bizmates.jp.local.key;
    charset utf-8;

    # logging
    access_log /proc/self/fd/1 main if=$is_not_alb;
    error_log /proc/self/fd/2 warn;

    # compress
    gzip on;
    gzip_types text/plain
    text/css
    text/xml
    text/javascript
    application/json
    application/javascript
    application/xml
    application/xhtml+xml
    application/rss+xml
    application/x-javascript
    application/atom+xml
    application/x-httpd-php;
    gzip_buffers 4 8k;
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_vary on;
    gzip_comp_level 9;

    error_page 404 /404.html;
    error_page 403 /404.html;

    client_max_body_size 50M;
    proxy_connect_timeout 60;
    proxy_send_timeout 300;
    proxy_read_timeout 300;
    send_timeout 300;

    root /student-frontend;

    location / {
        try_files $uri $uri/ /index.html;
    }

    # For live reload
    #  location / {
    #     send_timeout 300;

    #     proxy_pass http://localhost:1004;
    #     proxy_set_header Host localhost:1004;
    #     proxy_set_header Origin localhost:1004;
    #     proxy_set_header X-Forwarded-Host localhost:1004;
    #     proxy_set_header X-Forwarded-Server localhost:1004;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_redirect off;
    #     keepalive_timeout 3600;
    #     proxy_send_timeout 3600;
    #     proxy_read_timeout 3600;
    # }

    location = /healthcheck {
        empty_gif;
        break;
    }

    location ~* \.html?$ {
        expires -1;
        add_header Pragma "no-cache";
        add_header Cache-Control "no-store, must-revalidate";
    }

    location /graphql {
        proxy_pass http://student-nginx;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_redirect off;
        add_header Cache-Control "no-store";
    }

    location /api-student/ {
        proxy_pass http://student-nginx/api-student/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_redirect off;
        add_header Cache-Control "no-store";
    }

    location /MyBizmates/api/ {
        proxy_pass http://bizmates-nginx;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_redirect off;
        add_header Cache-Control "no-store";
    }

    location /socket.io/ {
        proxy_pass http://chatserver/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    # location /rd/ {
    #     proxy_pass http://nlp-app:8215/rd/;
    # }

    # Need internet
    location /ma_images/ {
        proxy_pass https://www.bizmates.jp/ma_images/;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
    }

    location ~ ^/(material|assets/upload)/ {
        proxy_pass https://bizmates.jp;
        proxy_ssl_trusted_certificate /etc/ssl/certs/bizmates.jp.crt;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
    }

    location /MyStage/system-test {
        # proxy_pass http://mystage-system-test:8080;
        proxy_pass http://localhost:94;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /MyStage/st {
        # proxy_pass http://mystage-system-test:8080;
        proxy_pass http://localhost:94;
    }

    location /MyStage/ {
        # proxy_pass http://mystage-frontend:8080;
        # Student
        proxy_pass http://localhost:95;
    }

    location ~ ^/sockjs-node/(.+/websocket)$ {
        proxy_pass http://mystage-frontend:8080/sockjs-node/$1;
        # proxy_pass http://mystage-system-test:8080/sockjs-node/$1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /sockjs-node/ {
        proxy_pass http://mystage-frontend:8080/sockjs-node/;
        # proxy_pass http://mystage-system-test:8080/sockjs-node/;
    }

    location ^~ /MyStage/html-material {
        # proxy_pass http://mystage-frontend:8080;
        proxy_pass http://localhost:89;
    }

    # # If we remove this setting, there'll be a lot of sockjs-node related errors in /MyStage
    # # They are probably related to the HMR feature of Webpack-dev-server https://webpack.js.org/concepts/hot-module-replacement/
    # # See e.g. here for details: https://warlord0blog.wordpress.com/2018/07/18/vue-cli-3-and-hmr/
    # # location /sockjs-node/ {
    # #     # proxy_pass http://127.0.01:8188/sockjs-node/;
    # #     proxy_pass http://mystage-frontend:8080;
    # # }
    # location /MyBizmates/Wordbook {
    #     # proxy_pass http://wordbook-cli:8080;
    #     proxy_pass http://127.0.0.1:90;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "Upgrade";
    # }

    # location /ws {
    #     #proxy_pass http://127.0.0.1:8211/ws;
    #     #proxy_pass ws://192.168.8.138:8080/ws;
    #     #proxy_pass http://host.docker.internal:8080;
    #     proxy_pass http://$host:$server_port;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "Upgrade";
    # }
}